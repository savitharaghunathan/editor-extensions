name: Release

on:
  push:
    tags:
      - '*'  
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Enter Tag for the release'
        required: true

      prerelease:
        description: 'Is this a pre-release?'
        required: true
        type: boolean
        default: false 

jobs:
  release_prereq:
    name: Build, Test, and Package (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux
          - os: macos-latest
            arch: macos
          - os: windows-latest
            arch: windows
      max-parallel: 3
    outputs:
      tag_name: ${{ steps.determine_tag.outputs.tag_name }}  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "vscode/.nvmrc"

      - name: Determine the tag
        id: determine_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag_name=${{ inputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.ref }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Install dependencies
        working-directory: ./vscode
        run: npm ci

      # Run tests on Linux
      - name: Run tests (Linux)
        if: matrix.arch == 'linux'
        working-directory: ./vscode
        run: 
          xvfb-run -a npm run test

      # Run tests on macOS
      - name: Run tests (macOS)
        if: matrix.arch == 'macos'
        working-directory: ./vscode
        run: npm test

      # Run tests on Windows
      - name: Run tests (Windows)
        if: matrix.arch == 'windows'
        working-directory: ./vscode
        shell: cmd
        run: npm test

      - name: Build Package
        working-directory: ./vscode
        run: npm run package

      - name: Generate .vsix package
        working-directory: ./vscode
        run: |
          npm install @vscode/vsce
          npx vsce package

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension-${{ matrix.arch }}
          path: ./vscode/*.vsix

  release:
    name: Final Release
    runs-on: ubuntu-latest
    needs: release_prereq  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List available artifacts
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-extension-linux
          path: ./artifacts/vscode-extension-linux

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-extension-macos
          path: ./artifacts/vscode-extension-macos

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-extension-windows
          path: ./artifacts/vscode-extension-windows

      - name: Verify Downloaded Artifacts
        run: ls -R ./artifacts

      - name: Rename VSIX Packages
        run: |
          mv ./artifacts/vscode-extension-linux/*.vsix ./artifacts/konveyor-linux-${{ needs.release_prereq.outputs.tag_name }}.vsix
          mv ./artifacts/vscode-extension-macos/*.vsix ./artifacts/konveyor-macos-${{ needs.release_prereq.outputs.tag_name }}.vsix
          mv ./artifacts/vscode-extension-windows/*.vsix ./artifacts/konveyor-windows-${{ needs.release_prereq.outputs.tag_name }}.vsix

      # Reuse Konveyor changelog
      - name: Generate Changelog
        id: changelog
        uses: konveyor/release-tools/create-release@main
        with:
          version: ${{ needs.release_prereq.outputs.tag_name }}
          prev_version: $(gh api repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          repository: ${{ github.repository }}
          ref: ${{ github.sha }}
          skip_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.release_prereq.outputs.tag_name }}
          commit: ${{ github.sha }}
          body: ${{ steps.changelog.outputs.changelog }}  
          artifacts: |
            ./artifacts/konveyor-linux-*.vsix
            ./artifacts/konveyor-macos-*.vsix
            ./artifacts/konveyor-windows-*.vsix
          prerelease: ${{ github.event.inputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
